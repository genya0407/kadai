%!PS-Adobe-2.0 EPSF-2.0
%%Title: /Users/sangenya/dev/eec/third/tex/graphs/euler/error_by_time.eps
%%Creator: gnuplot 5.0 patchlevel 5
%%CreationDate: Thu Dec 22 05:16:50 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/Users/sangenya/dev/eec/third/tex/graphs/euler/error_by_time.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 5)
  /Author (sangenya)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Dec 22 05:16:50 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 448 M
6261 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 448 M
63 0 V
6198 0 R
-63 0 V
stroke
602 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 969 M
6261 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 969 M
63 0 V
6198 0 R
-63 0 V
stroke
602 969 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 1491 M
6261 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 1491 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1491 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 2012 M
6261 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 2012 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2012 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 2534 M
6261 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 2534 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 3055 M
6261 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 3055 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3055 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 3576 M
6261 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 3576 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 4098 M
6261 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 4098 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4098 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.5)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 4619 M
6261 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 4619 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 448 M
0 4171 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 448 M
0 63 V
0 4108 R
0 -63 V
stroke
686 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1580 448 M
0 4171 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1580 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1580 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2475 448 M
0 4171 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2475 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2475 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3369 448 M
0 4171 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3369 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3369 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4264 448 M
0 4171 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4264 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4264 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5158 448 M
0 4171 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5158 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5158 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6053 448 M
0 4171 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6053 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6053 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6947 448 M
0 4171 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 35)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (e)]
[(Helvetica) 112.0 -42.0 true true 0 (r)]
[(Helvetica) 140.0 0.0 true true 0 (\(t\))]
] -32.7 MCshow
grestore
LTb
LCb setrgbcolor
3816 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (t)]
] -46.7 MCshow
LTb
LCb setrgbcolor
3816 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (error by time)]
] -46.7 MCshow
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 686 448 Pls
704 453 Pls
722 458 Pls
740 464 Pls
758 469 Pls
775 474 Pls
793 480 Pls
811 485 Pls
829 490 Pls
847 496 Pls
865 501 Pls
883 507 Pls
901 512 Pls
919 518 Pls
936 523 Pls
954 529 Pls
972 535 Pls
990 540 Pls
1008 546 Pls
1026 552 Pls
1044 557 Pls
1062 563 Pls
1080 569 Pls
1097 575 Pls
1115 581 Pls
1133 586 Pls
1151 592 Pls
1169 598 Pls
1187 604 Pls
1205 610 Pls
1223 616 Pls
1241 622 Pls
1258 628 Pls
1276 634 Pls
1294 641 Pls
1312 647 Pls
1330 653 Pls
1348 659 Pls
1366 665 Pls
1384 672 Pls
1402 678 Pls
1419 684 Pls
1437 691 Pls
1455 697 Pls
1473 704 Pls
1491 710 Pls
1509 717 Pls
1527 723 Pls
1545 730 Pls
1563 737 Pls
1580 743 Pls
1598 750 Pls
1616 757 Pls
1634 763 Pls
1652 770 Pls
1670 777 Pls
1688 784 Pls
1706 791 Pls
1724 798 Pls
1741 805 Pls
1759 812 Pls
1777 819 Pls
1795 826 Pls
1813 833 Pls
1831 840 Pls
1849 847 Pls
1867 854 Pls
1885 861 Pls
1902 869 Pls
1920 876 Pls
1938 883 Pls
1956 891 Pls
1974 898 Pls
1992 906 Pls
2010 913 Pls
2028 921 Pls
2046 928 Pls
2063 936 Pls
2081 943 Pls
2099 951 Pls
2117 959 Pls
2135 967 Pls
2153 974 Pls
2171 982 Pls
2189 990 Pls
2207 998 Pls
2224 1006 Pls
2242 1014 Pls
2260 1022 Pls
2278 1030 Pls
2296 1038 Pls
2314 1046 Pls
2332 1055 Pls
2350 1063 Pls
2368 1071 Pls
2385 1079 Pls
2403 1088 Pls
2421 1096 Pls
2439 1105 Pls
2457 1113 Pls
2475 1122 Pls
2493 1130 Pls
2511 1139 Pls
2529 1147 Pls
2546 1156 Pls
2564 1165 Pls
2582 1174 Pls
2600 1183 Pls
2618 1191 Pls
2636 1200 Pls
2654 1209 Pls
2672 1218 Pls
2690 1227 Pls
2707 1236 Pls
2725 1246 Pls
2743 1255 Pls
2761 1264 Pls
2779 1273 Pls
2797 1283 Pls
2815 1292 Pls
2833 1301 Pls
2851 1311 Pls
2868 1320 Pls
2886 1330 Pls
2904 1340 Pls
2922 1349 Pls
2940 1359 Pls
2958 1369 Pls
2976 1379 Pls
2994 1388 Pls
3012 1398 Pls
3029 1408 Pls
3047 1418 Pls
3065 1428 Pls
3083 1438 Pls
3101 1449 Pls
3119 1459 Pls
3137 1469 Pls
3155 1479 Pls
3173 1490 Pls
3190 1500 Pls
3208 1510 Pls
3226 1521 Pls
3244 1532 Pls
3262 1542 Pls
3280 1553 Pls
3298 1564 Pls
3316 1574 Pls
3334 1585 Pls
3351 1596 Pls
3369 1607 Pls
3387 1618 Pls
3405 1629 Pls
3423 1640 Pls
3441 1651 Pls
3459 1662 Pls
3477 1674 Pls
3495 1685 Pls
3512 1696 Pls
3530 1708 Pls
3548 1719 Pls
3566 1731 Pls
3584 1743 Pls
3602 1754 Pls
3620 1766 Pls
3638 1778 Pls
3656 1790 Pls
3673 1801 Pls
3691 1813 Pls
3709 1825 Pls
3727 1838 Pls
3745 1850 Pls
3763 1862 Pls
3781 1874 Pls
3799 1886 Pls
3816 1899 Pls
3834 1911 Pls
3852 1924 Pls
3870 1936 Pls
3888 1949 Pls
3906 1962 Pls
3924 1974 Pls
3942 1987 Pls
3960 2000 Pls
3977 2013 Pls
3995 2026 Pls
4013 2039 Pls
4031 2052 Pls
4049 2066 Pls
4067 2079 Pls
4085 2092 Pls
4103 2106 Pls
4121 2119 Pls
4138 2133 Pls
4156 2146 Pls
4174 2160 Pls
4192 2174 Pls
4210 2187 Pls
4228 2201 Pls
4246 2215 Pls
4264 2229 Pls
4282 2243 Pls
4299 2258 Pls
4317 2272 Pls
4335 2286 Pls
4353 2300 Pls
4371 2315 Pls
4389 2329 Pls
4407 2344 Pls
4425 2359 Pls
4443 2373 Pls
4460 2388 Pls
4478 2403 Pls
4496 2418 Pls
4514 2433 Pls
4532 2448 Pls
4550 2463 Pls
4568 2479 Pls
4586 2494 Pls
4604 2509 Pls
4621 2525 Pls
4639 2541 Pls
4657 2556 Pls
4675 2572 Pls
4693 2588 Pls
4711 2604 Pls
4729 2620 Pls
4747 2636 Pls
4765 2652 Pls
4782 2668 Pls
4800 2684 Pls
4818 2700 Pls
4836 2717 Pls
4854 2733 Pls
4872 2750 Pls
4890 2767 Pls
4908 2784 Pls
4926 2800 Pls
4943 2817 Pls
4961 2834 Pls
4979 2851 Pls
4997 2869 Pls
5015 2886 Pls
5033 2903 Pls
5051 2921 Pls
5069 2938 Pls
5087 2956 Pls
5104 2974 Pls
5122 2991 Pls
5140 3009 Pls
5158 3027 Pls
5176 3045 Pls
5194 3064 Pls
5212 3082 Pls
5230 3100 Pls
5248 3119 Pls
5265 3137 Pls
5283 3156 Pls
5301 3174 Pls
5319 3193 Pls
5337 3212 Pls
5355 3231 Pls
5373 3250 Pls
5391 3269 Pls
5409 3289 Pls
5426 3308 Pls
5444 3327 Pls
5462 3347 Pls
5480 3367 Pls
5498 3386 Pls
5516 3406 Pls
5534 3426 Pls
5552 3446 Pls
5570 3467 Pls
5587 3487 Pls
5605 3507 Pls
5623 3528 Pls
5641 3548 Pls
5659 3569 Pls
5677 3590 Pls
5695 3610 Pls
5713 3631 Pls
5731 3653 Pls
5748 3674 Pls
5766 3695 Pls
5784 3716 Pls
5802 3738 Pls
5820 3760 Pls
5838 3781 Pls
5856 3803 Pls
5874 3825 Pls
5892 3847 Pls
5909 3869 Pls
5927 3891 Pls
5945 3914 Pls
5963 3936 Pls
5981 3959 Pls
5999 3982 Pls
6017 4004 Pls
6035 4027 Pls
6053 4050 Pls
6070 4074 Pls
6088 4097 Pls
6106 4120 Pls
6124 4144 Pls
6142 4167 Pls
6160 4191 Pls
6178 4215 Pls
6196 4239 Pls
6214 4263 Pls
6231 4287 Pls
6249 4312 Pls
6267 4336 Pls
6285 4361 Pls
6303 4386 Pls
6321 4410 Pls
6339 4435 Pls
6357 4460 Pls
6375 4486 Pls
6392 4511 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 4619 N
686 448 L
6261 0 V
0 4171 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
